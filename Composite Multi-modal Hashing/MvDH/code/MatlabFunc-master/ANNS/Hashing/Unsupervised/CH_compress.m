function [B,elapse] = CH_compress(A, model)
%   This is a wrapper function of CH (Compressed Hashing) testing.
%
%	Usage:
%	[B,elapse] = CH_compress(A, model)
%
%	      A: Rows of vectors of data points. Each row is sample point
%     model: The model generated by CH_learn.
%
%	      B: The binary code of the input data A. Each row is sample point
%    elapse: The coding time (testing time).
%
%
%Reference:
%
%   Yue Lin, Rong Jin, Deng Cai, Shuicheng Yan, Xuelong Li: Compressed
%   Hashing. CVPR 2013: 446-451
%
%   version 2.0 --Nov/2016 
%   version 1.0 --Jan/2014 
%
%   Written by  Yue Lin (linyue29@gmail.com)
%               Deng Cai (dengcai AT gmail DOT com) 
%                                   

tmp_T = tic;

D = EuDist2(A,model.Landmarks,0);

[nSmp,~] = size(A);
[nLandmarks,~] = size(model.Landmarks);

dump = zeros(nSmp,model.rL);
idx = dump;
for i = 1:model.rL
    [dump(:,i),idx(:,i)] = min(D,[],2);
    temp = (idx(:,i)-1)*nSmp+(1:nSmp)';
    D(temp) = 1e100; 
end

dump = exp(-dump/(2*model.sigma^2));
sumD = sum(dump,2);
Gsdx = bsxfun(@rdivide,dump,sumD);
Gidx = repmat((1:nSmp)',1,model.rL);
Gjdx = idx;
Z=sparse(Gidx(:),Gjdx(:),Gsdx(:),nSmp,nLandmarks);

B = LSH_compress(Z, model);

elapse = toc(tmp_T);
end
